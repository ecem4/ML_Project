import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.preprocessing import StandardScaler

# Import Data
cerq_data = pd.read_csv("CERQ.csv")
cope_data = pd.read_csv("COPE.csv")
lot_r_data = pd.read_csv("LOT-R.csv")
PSQ_data = pd.read_csv("PSQ.csv")
NEO_FFI_data = pd.read_csv("NEO_FFI.csv")
stai_g_x2_data = pd.read_csv("STAI_G_X2.csv")

# Merged Data Accordingly to interested variables
data_to_analyze = cerq_data[["CERQ_SelfBlame", "CERQ_Rumination", "CERQ_Catastrophizing"]]
data_to_analyze["COPE_SelfBlame"] = cope_data["COPE_SelfBlame"]
data_to_analyze[["LOT_Optimism", "LOT_Pessimism"]] = lot_r_data[["LOT_Optimism", "LOT_Pessimism"]]
data_to_analyze[["PSQ_Worries", "PSQ_Tension"]] = PSQ_data[["PSQ_Worries", "PSQ_Tension"]]
data_to_analyze["NEOFFI_Neuroticism"] = NEO_FFI_data["NEOFFI_Neuroticism"]
data_to_analyze["NEOFFI_Extraversion"] = NEO_FFI_data["NEOFFI_Extraversion"]
data_to_analyze["STAI_Trait_Anxiety"] = stai_g_x2_data["STAI_Trait_Anxiety"]

data_to_analyze.head()

# Step 1: Clean the data
data_to_analyze.replace(" ", None, inplace=True)  # Replace empty strings with None
data_to_analyze = data_to_analyze.apply(pd.to_numeric, errors='coerce')  # Convert all columns to numeric, set invalid values to NaN  # Fill NaN values with column means
a = data_to_analyze.loc[:, data_to_analyze.columns != 'ID']

data_to_analyze.head()

# Step 2: Normalize the data
scaler = StandardScaler()
normalized_data = a.copy()
scaler.fit(normalized_data)

normalized_data.head()

# Step 3: Compute the Correlation Matrix
correlation_matrix = normalized_data.corr()
correlation_matrix.head()

#Visualize
plt.figure(figsize=(12, 10))
sns.heatmap(correlation_matrix, annot=True, fmt=".2f", cmap="coolwarm", square=True, cbar=True)
plt.title("Correlation Matrix Heatmap")
plt.show()
